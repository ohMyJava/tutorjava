<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lgz.tutorjava.dao.StudentMapper">

    <resultMap id="StudentMap" type="com.lgz.tutorjava.model.Student">
        <id column="student_id" property="studentId" jdbcType="INTEGER" />
        <result column="student_name" property="studentName" jdbcType="VARCHAR" />
        <result column="student_age" property="studentAge" jdbcType="VARCHAR" />
        <result column="student_sex" property="studentSex" jdbcType="VARCHAR" />
        <result column="student_grade" property="studentGrade" jdbcType="VARCHAR" />
        <result column="student_subject" property="studentSubject" jdbcType="VARCHAR" />
        <result column="phone_number" property="phoneNumber" jdbcType="VARCHAR" />
        <result column="expect_tutor_able" property="expectTutorAble" jdbcType="VARCHAR" />
        <result column="expect_tutor_location" property="expectTutorLocation" jdbcType="VARCHAR" />
        <result column="student_hobby" property="studentHobby" jdbcType="VARCHAR" />
        <result column="reg_time" property="regTime" jdbcType="VARCHAR" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="is_del" property="isDel" jdbcType="TINYINT" />
        <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
    </resultMap>
    <select id="getStudentList" resultType="map">
        select student_id as id,
               student_name as name,
               student_grade as grade,
               student_subject as subject,
               expect_tutor_location as location
        from student
        where is_del=0
        <if test="condition!=null and condition!=''">
            and student_name like '%${condition}%'
        </if>
        limit #{page},#{limit};
    </select>

    <update id="delStudents">
        update student set is_del=1,update_time=#{updateTime} where student_id in (${delList});
    </update>

    <insert id="addStudent" parameterType="com.lgz.tutorjava.model.Student">
        insert into student (student_name, student_age, student_sex,
                             student_grade, student_subject, phone_number,
                             expect_tutor_able, expect_tutor_location, student_hobby,
                             reg_time, user_name, is_del)
        values (#{student.studentName},#{student.studentAge},#{student.studentSex},#{student.studentGrade},
                #{student.studentSubject},#{student.phoneNumber},#{student.expectTutorAble},#{student.expectTutorLocation},
                #{student.studentHobby},#{student.regTime},#{student.userName},0);
    </insert>

    <resultMap id="UserMap" type="com.lgz.tutorjava.model.User">
        <id column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="findUserName" resultMap="UserMap">
        select user_id,user_name from user where user_name like '%${name}%';
    </select>

    <update id="modifyStudent" parameterType="com.lgz.tutorjava.model.Student">
        update student set student_name=#{student.studentName}, student_age=#{student.studentAge},
                           student_sex=#{student.studentSex},student_grade=#{student.studentGrade},
                           student_subject=#{student.studentSubject}, phone_number=#{student.phoneNumber},
                           expect_tutor_able=#{student.expectTutorAble}, expect_tutor_location=#{student.expectTutorLocation},
                           student_hobby=#{student.studentHobby},
                           update_time=#{student.updateTime}, user_name=#{student.userName}
        where student_id=#{student.studentId};
    </update>

    <select id="getStudent" resultMap="StudentMap">
        select student_name, student_age, student_sex,
               student_grade, student_subject, phone_number,
               expect_tutor_able, expect_tutor_location, student_hobby,
               user_name
        from student where student_id=#{studentId};

    </select>

    <select id="studentNumber" resultType="int">
        select count(*) from student
        where is_del=0
        <if test="condition!=null and condition!=''">
            and student_name like '%${condition}%'
        </if>
    </select>

    <select id="getStudentNameById" resultType="string">
        select student_name from student where student_id = #{studentId}
    </select>

    <select id="getUserIdByStudentId" resultType="integer">
        select user_id from user,student
        where student_id=#{studentId} and student.user_name=user.user_name
    </select>
</mapper>