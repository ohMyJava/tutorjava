<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lgz.tutorjava.dao.UserMapper">

    <resultMap id="UserMap" type="com.lgz.tutorjava.model.User">
        <id column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="phone_number" property="phoneNumber" jdbcType="VARCHAR"/>
        <result column="is_del" property="isDel" jdbcType="INTEGER"/>
        <result column="reg_time" property="regTime" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="userLoginCheck" resultType="java.util.Map" >
        select user_id as id,user_name as userName,password from user where user_name=#{userName};
    </select>

    <select id="adminLoginCheck" resultType="java.util.Map" >
        select admin_id as id,admin_name as userName,admin_password as password from admin where admin_name=#{userName};
    </select>

    <insert id="register" parameterType="com.lgz.tutorjava.model.User">
        insert into user (user_name,password,name,age,sex,phone_number,reg_time)
        values (#{user.userName},#{user.password},#{user.name},#{user.age},#{user.sex},#{user.phoneNumber},#{user.regTime});
    </insert>

    <select id="userNameCheck" resultType="int">
        select count(*) from user where user_name=#{userName};
    </select>

    <select id="getUsernameList" resultType="string">
        select user_name from user where is_del=0;
    </select>

    <insert id="addUser" parameterType="com.lgz.tutorjava.model.User">
        insert into user (user_name, password, name, sex, age, phone_number, reg_time, is_del)
        VALUES(#{user.userName},#{user.password},#{user.name},#{user.sex},#{user.age},#{user.phoneNumber},#{user.regTime},0);
    </insert>

    <select id="getUsers" resultMap="UserMap">
        select user_id,user_name,name,phone_number from user where is_del=0
        <if test="condition!=null and condition!=''">
            and CONCAT(user_name,name) like '%${condition}%'
        </if>
        limit #{page},#{limit}
    </select>

    <select id="getNumbers" resultType="integer">
        select count(*) from user where is_del=0
        <if test="condition!=null and condition!=''">
            and CONCAT(user_name,name) like '%${condition}%'
        </if>
    </select>

    <update id="delUser" parameterType="string">
        update user set is_del=1, update_time=#{updateTime} where user_id in (${delList})
    </update>
</mapper>